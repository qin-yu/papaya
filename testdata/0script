#!/bin/bash
# test script

# binaries
papaya=../papaya

some_tests_failed=false
fail_log=failed.log

ensuredir () {
    rm -rf "$1"
    mkdir "$1";
}

record_failure () {
    some_tests_failed=true
    echo "$1" >>$fail_log
}

complain_if_mismatch () {
    local ref="${1%.out}.ref"
    local filelist="contours.out labels.out scalar.out tensor_W020.out tensor_W120.out tensor_W211.out tensor_W220.out vector.out tensor_W102.out"
    for F in $filelist; do 
        ./tsvdiff "$1/$F" "$ref/$F" || {
            echo "[$0] Test $1 failed" >&2
            record_failure "FAILED $1"
            return 1
        }
    done
}

complain_if_different () {
    if ! diff -q "$1" "$2"; then
        echo "[$0] Test $1 == $2 failed" >&2
        record_failure "FAILED $1"
        return 1
    fi    
}

echo 'The following tests failed:' >$fail_log
ensuredir multiellipse.out
ensuredir multiellipse2.out
ensuredir multiellipse2.com.out
echo "[$0] Running papaya testcases..." >&2
$papaya -c multiellipse.conf -i multiellipse.poly -o multiellipse.out/ &
$papaya -c multiellipse.conf -i multiellipse2.poly -o multiellipse2.out/ &
$papaya -c multiellipse.com.conf -i multiellipse2.poly -o multiellipse2.com.out/ &
wait
ensuredir ma105_7o.out
ensuredir ma105_7o_cropped.out
$papaya -c ma105_7o.conf &
$papaya -c ma105_7o_cropped.conf &
ensuredir counterexample.out
$papaya -c counterexample.conf &
wait
ensuredir viereck-new.out 
ensuredir viereck.out
$papaya -c counterexample.conf -i viereck-new.poly  -o viereck-new.out/ &
$papaya -c counterexample.conf -i viereck.poly  -o viereck.out/ &
$papaya -c circle_normalization_test.conf -o circle_normalization_breidenbach.out/ &
$papaya -c circle_normalization_test.conf --normalization new -o circle_normalization_new.out/ &
$papaya -c degenerate_contour_repair.conf &
wait

ensuredir dummy.out
$papaya -c counterexample.conf -i <(cat viereck.poly)  -o dummy.out/ \
    || record_failure "Give format in config file"
$papaya -c counterexample.conf -F poly -i <(cat viereck.poly)  -o dummy.out/  \
    || record_failure "Give format at commandline"

echo "[$0] Comparing to reference results..." >&2

# standard ellipses, at origin and not...
complain_if_mismatch multiellipse.out
complain_if_mismatch multiellipse2.out
complain_if_mismatch multiellipse2.com.out

# test of a larger pixel data input
complain_if_mismatch ma105_7o.out
complain_if_mismatch ma105_7o_cropped.out

# this testcase is near degenerate and eigenvectors are indeterminate
cp counterexample.ref/tensor_W102.out counterexample.out
cp counterexample.ref/tensor_W211.out counterexample.out
complain_if_mismatch counterexample.out

# test of different normalizations
complain_if_mismatch circle_normalization_new.out
complain_if_mismatch circle_normalization_breidenbach.out

# test to see if Papaya is still able to read old-style (zero-based) polys.
# please write new .poly files in one-based format.
# (gnuplot scripts will be different obviously since they contain path names)
rm -f viereck{,-new}.out/*.gp
complain_if_different viereck-new.out viereck.out

# see if broken contours can be fixed
complain_if_mismatch degenerate_contour_repair.out

./pgmreader || record_failure "pgm reader test"

# not checked in
#ensuredir multirectangle.out
#$papaya -c multiellipse.conf -i multirectangle.poly -o multirectangle.out/
#complain_if_mismatch multirectangle.out

if $some_tests_failed; then
    cat $fail_log >&2
fi
rm -f $fail_log
